name: "facenet_ensemble"
platform: "ensemble"
max_batch_size: 64
dynamic_batching {
  preferred_batch_size: [ 1, 16, 64 ]
  max_queue_delay_microseconds: 50000
}












input [
  {
    name: "raw_image_array"
    data_type: TYPE_UINT8
    dims: [ -1 ]
    allow_ragged_batch: true
  }
]

output [
  {
    name: "true_boxes",
    data_type: TYPE_FP32,
    dims: [ -1, 4 ]
  },
  {
    name: "true_proba",
    data_type: TYPE_FP32,
    dims: [ -1, 1 ]
  }
]

  ensemble_scheduling {
    step [
      {
        model_name: "facenet_preprocess"
        model_version: -1
        input_map {
          key: "raw_image_array"
          value: "raw_image_array"
        }
        output_map {
          key: "pixel_values"
          value: "detection_preprocessing_output_pixel_values"
        }
        output_map {
          key: "true_image_size"
          value: "detection_preprocessing_output_true_image_size"
        }
      },
      {
        model_name: "facenet"
        model_version: -1
        input_map {
          key: "input_1"
          value: "detection_preprocessing_output_pixel_values"
        }

        output_map {
          key: "output_bbox/BiasAdd"
          value: "output_bbox/BiasAdd"
        }
        output_map {
          key: "output_cov/Sigmoid"
          value: "output_cov/Sigmoid"
        }
      },
      {
        model_name: "facenet_postprocess"
        model_version: -1
        input_map {
          key: "output_bbox/BiasAdd"
          value: "output_bbox/BiasAdd"
        }
        input_map {
          key: "output_cov/Sigmoid"
          value: "output_cov/Sigmoid"
        }
        input_map {
          key: "true_image_size"
          value: "detection_preprocessing_output_true_image_size"
        }

        output_map {
          key: "true_boxes"
          value: "true_boxes"
        }
        output_map {
          key: "true_proba"
          value: "true_proba"
        }
      }
    ]
  }